







































































































local Material = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/MaterialLua/master/Module.lua"))()
local Settings = {}

local UI = Material.Load({
     Title = "One Shot | Legend HandlesYT",
     Style = 1,
     SizeX = 350,
     SizeY = 400,
     Theme = "Dark"
})

getgenv().cham = false
getgenv().nameESP = false
getgenv().boxESP = false


getgenv().esp_loaded = false
getgenv().Visibility = false

	
	
local main = UI.New({Title = "Main-Features"})

local SelectMob = {}
for i,v in pairs(workspace.Game.Characters:GetChildren()) do 
    if v:IsA("Model") and not table.find(SelectMob, v.Name) then 
        table.insert(SelectMob, v.Name)
    end
end





main.Dropdown({
    Text = "Select Mob To Farm",
    Options = SelectMob,
    Callback = function(v)
        Settings["ChosenMob"] = v 
    end
})

main.Toggle({
    Text = "Auto Farm Mob",
    Enabled = false,
    Callback = function(v)
        Settings["Autofarm"] = v 
    end
})

main.Slider({
    Text = "Distance From Mob",
    Callback = function(v)
        Settings["Distance"] = v
    end,
    Min = -20,
    Max = 20,
    Def = 5
})



	
main.Toggle({
    Text = "Auto Attack",
    Enabled = false,
    Callback = function(Value)
      a = Value
        while a do task.wait()
        pcall(function()

local args = {
    [1] = "Punch"
}

game:GetService("Players").LocalPlayer.Backpack.Client.re:FireServer(unpack(args))

        end)
        end
    end
})



	main.Button({
	Text = "Infinite Energy",
		Callback = function()
	game.Players.LocalPlayer.Character.INFO.Stamina:Destroy()
		    end})




	main.Button({
	Text = "No Ragdoll",
		Callback = function()
	game.Players.LocalPlayer.Character.Base.Ragdoll:Destroy()
		    end})
		    
		    

	main.Button({
	Text = "No Knockback",
		Callback = function()
	game.Players.LocalPlayer.Character.Base.Knock:Destroy()
		    end})
		    
local main1 = UI.New({Title = "Misc"})



	main1.Button({
	Text = "FPS Booster",
		Callback = function()
		       for _,v in pairs(workspace:GetDescendants()) do
if v.ClassName == "Part"
or v.ClassName == "SpawnLocation"
or v.ClassName == "WedgePart"
or v.ClassName == "Terrain"
or v.ClassName == "MeshPart" then
v.Material = "Plastic"
end
end
		    end})
		    
	main1.Button({
	Text = "CFrame Speed (Z)",
		Callback = function()
        repeat
		wait()
	until game:IsLoaded()
	local L_134_ = game:service('Players')
	local L_135_ = L_134_.LocalPlayer
	repeat
		wait()
	until L_135_.Character
	local L_136_ = game:service('UserInputService')
	local L_137_ = game:service('RunService')
	getgenv().Multiplier = 0.5
	local L_138_ = true
	local L_139_
	L_136_.InputBegan:connect(function(L_140_arg0)
		if L_140_arg0.KeyCode == Enum.KeyCode.LeftBracket then
			Multiplier = Multiplier + 0.01
			print(Multiplier)
			wait(0.2)
			while L_136_:IsKeyDown(Enum.KeyCode.LeftBracket) do
				wait()
				Multiplier = Multiplier + 0.01
				print(Multiplier)
			end
		end
		if L_140_arg0.KeyCode == Enum.KeyCode.RightBracket then
			Multiplier = Multiplier - 0.01
			print(Multiplier)
			wait(0.2)
			while L_136_:IsKeyDown(Enum.KeyCode.RightBracket) do
				wait()
				Multiplier = Multiplier - 0.01
				print(Multiplier)
			end
		end
		if L_140_arg0.KeyCode == Enum.KeyCode.Z then
			L_138_ = not L_138_
			if L_138_ == true then
				repeat
					game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + game.Players.LocalPlayer.Character.Humanoid.MoveDirection * Multiplier
					game:GetService("RunService").Stepped:wait()
				until L_138_ == false
			end
		end
	end)
        end})
main1.Slider({
	Text = "CFrame Speed",
	Callback = function(s)
 
 getgenv().Multiplier = s
	end,
	Min = 0,
	Max = 5,
	Def = 0
})




 main1.Toggle({
	Text = "Infinite Jump",
	Callback = function(state)
 if state then
_G.infinjump = true
local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()
Mouse.KeyDown:connect(function(k)
if _G.infinjump then
if k:byte() == 32 then
Humanoid = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
Humanoid:ChangeState("Jumping")
wait(0.1)
Humanoid:ChangeState("Seated")
end
end
end)
local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()
    else
if _G.infinjump == true then
_G.infinjump = false
else
_G.infinjump = true
end
end
            
	end,
	Enabled = false
})






main1.Button({
	Text = "(L) Lag Server",
		Callback = function()
		    getgenv().Toggled=false
getgenv().KeyBind="L"
getgenv().Delay=0.7
local UIS=game:GetService'UserInputService'

--//main

local function Source()
game:GetService("NetworkClient"):SetOutgoingKBPSLimit(math.huge)
local function getmaxvalue(val) 
   local mainvalueifonetable = 49999
   if type(val) ~= "number" then
       return nil 
   end
   local calculateperfectval = (mainvalueifonetable/(val+2))
   return calculateperfectval 
end

local function bomb(tableincrease, tries) 
 local maintable = {}
 local spammedtable = {}
 
 table.insert(spammedtable, {})
 z = spammedtable[1]
 
 for i = 1, tableincrease do
    local tableins = {}
    table.insert(z, tableins)
    z = tableins
 end 
 
 local calculatemax = getmaxvalue(tableincrease) 
 local maximum 
 
 if calculatemax then
     maximum = calculatemax
     else
     maximum = 10000
 end
 
 for i = 1, maximum do
     table.insert(maintable, spammedtable)
 end 
 
  if calculatemax then
     maximum = calculatemax
     else
     maximum = 10000
 end
 
 for i = 1, maximum do
     table.insert(maintable, spammedtable)
 end 

 for i = 1, tries do
    game.RobloxReplicatedStorage.UpdatePlayerBlockList:FireServer(maintable)
 end
end


bomb(250, 5) --// change values if client crashes
end
UIS.InputBegan:Connect(function(Key)
    if Key.KeyCode==Enum.KeyCode[getgenv().KeyBind:upper()] and not UIS:GetFocusedTextBox() then
        if getgenv().Toggled then
            getgenv().Toggled=false
            warn'Disabled!'
        elseif not getgenv().Toggled then
            getgenv().Toggled=true
            warn'Enabled!'
            while getgenv().Toggled do
                Source()
                wait(getgenv().Delay)
            end
        end
    end
end)
		    
		    end})
local e = UI.New({
    Title = "Esp-Features"
})

 e.Toggle({
	Text = "Visual",
	Callback = function(Value)
 if getgenv().esp_loaded == false and Value == true then
            getgenv().esp_loaded = true
            loadstring(game:HttpGet("https://raw.githubusercontent.com/skatbr/Roblox-Releases/main/A_simple_esp.lua", true))()
        end
        getgenv().Visibility = Value
            
	end,
	Enabled = false
})


 e.Toggle({
	Text = "Box ESP",
	Callback = function(Value)
 if getgenv().esp_loaded == false and Value == true then
            getgenv().esp_loaded = true
            loadstring(game:HttpGet("https://raw.githubusercontent.com/skatbr/Roblox-Releases/main/A_simple_esp.lua", true))()
        end
        getgenv().boxESP = Value
		end,
	Enabled = false
})
 

 e.Toggle({
	Text = "Name ESP",
	Callback = function(Value)
 if getgenv().esp_loaded == false and Value == true then
            getgenv().esp_loaded = true
            loadstring(game:HttpGet("https://raw.githubusercontent.com/skatbr/Roblox-Releases/main/A_simple_esp.lua", true))()
        end
        getgenv().nameESP = Value
		end,
	Enabled = false
})


e.Toggle({
	Text = "Chams",
	Callback = function(Value)
   if getgenv().esp_loaded == false and Value == true then
            getgenv().esp_loaded = true
            loadstring(game:HttpGet("https://raw.githubusercontent.com/skatbr/Roblox-Releases/main/A_simple_esp.lua", true))()
        end
        getgenv().cham = Value
		end,
	Enabled = false
})


-- // Credits \\ --
local cred = UI.New({
    Title = "Credits"
})

local creators = {
    "YT: Legend Handles",
}

for i,v in pairs(creators) do 
    cred.Button({
        Text = v,
        Callback = function()
            setclipboard(v) 
        end;
    });
end;



spawn(function()
    while wait() do 
        if Settings.Autofarm then 
            pcall(function()
                if game.Players.LocalPlayer.Backpack:FindFirstChild("Combat") then 
                    game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild("Combat")) 
                end
                
                for i,v in pairs(workspace.Game.Characters:GetDescendants()) do
                   if v:IsA("Model") and v.Name == Settings.ChosenMob then 
                        repeat wait() 
 game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.HumanoidRootPart.CFrame * CFrame.new(0,0,Settings.Distance)
local args = {
    [1] = "Punch"
}

game:GetService("Players").LocalPlayer.Backpack.Client.re:FireServer(unpack(args))

until not Settings.Autofarm or v:FindFirstChild("Humanoid").Health <= 0
                    end
                end
            end)
        end
    end
end)

